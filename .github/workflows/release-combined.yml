name: Automatic Release Trigger

on:
  push:
    branches:
      - main
    paths:
      - 'Cargo.toml'
  workflow_dispatch:
    inputs:
      version:
        description: "Version to create release for (without v prefix)"
        required: true
        default: "0.1.0"

permissions:
  contents: write

jobs:
  prepare-release:
    name: Prepare Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # For automatic triggers from Cargo.toml changes
      - name: Check version from Cargo.toml
        id: get-version-from-cargo
        if: github.event_name == 'push'
        run: |
          VERSION=$(grep '^version = ' Cargo.toml | head -n 1 | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version from Cargo.toml: $VERSION"

      # For manual triggers
      - name: Get version from input
        id: get-version-from-input
        if: github.event_name == 'workflow_dispatch'
        run: |
          VERSION=${{ github.event.inputs.version }}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version from input: $VERSION"

      # Set unified version
      - name: Set version
        id: get-version
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            VERSION="${{ steps.get-version-from-cargo.outputs.version }}"
          else
            VERSION="${{ steps.get-version-from-input.outputs.version }}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

      # Create tag and push it to trigger the release workflows
      - name: Create and Push Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          VERSION="${{ steps.get-version.outputs.version }}"
          
          if git ls-remote --tags origin | grep -q "refs/tags/v$VERSION$"; then
            echo "Tag v$VERSION already exists, skipping tag creation"
          else
            echo "Creating tag v$VERSION"
            git tag -a "v$VERSION" -m "Release v$VERSION"
            git push origin "v$VERSION" || echo "Failed to push tag, it may already exist"
          fi