name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write # This is required for creating releases and uploading assets

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            asset_name: ferronix-linux-x86_64
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            asset_name: ferronix-linux-aarch64
            target: aarch64-unknown-linux-gnu
            
          # macOS builds
          - os: macos-latest
            asset_name: ferronix-macos-x86_64
            target: x86_64-apple-darwin
          - os: macos-latest
            asset_name: ferronix-macos-aarch64
            target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v3
      
      - name: Install Nix
        uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
      
      - name: Setup Cachix
        uses: cachix/cachix-action@v12
        with:
          name: ferronix
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          # Remove the line below if you have Cachix set up
          skipPush: true
      
      - name: Generate Cargo.lock
        run: nix develop -c cargo generate-lockfile
      
      - name: Install Rust Target
        run: nix develop -c rustup target add ${{ matrix.target }}
        
      # Special handling for cross-compilation
      - name: Install Cross-Compilation Dependencies (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
      
      - name: Build Release Binary
        run: nix develop -c cargo build --release --target ${{ matrix.target }}
      
      - name: Rename Binary
        run: cp target/${{ matrix.target }}/release/ferronix ${{ matrix.asset_name }}
        
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          files: ${{ matrix.asset_name }}
          draft: false
          prerelease: false
          generate_release_notes: true