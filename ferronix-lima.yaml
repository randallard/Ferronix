name: ferronix
description: "Ferronix development environment"

# VM arch: x86_64 or aarch64 (arm64)
arch: aarch64

# Ephemeral storage support
mountType: 9p
mounts:
  - location: "~"
    mountPoint: "/Users"
    writable: true
  - location: "/tmp/lima"
    mountPoint: "/tmp/lima"
    writable: true

# Provisions the VM with Nix pre-installed
provision:
  - mode: system
    script: |
      #!/bin/sh
      set -eux -o pipefail
      
      # Install necessary packages
      apt-get update
      apt-get install -y curl git build-essential

      # Set up Nix if not already installed
      if ! command -v nix &> /dev/null; then
        # Install Nix
        curl -L https://nixos.org/nix/install | sh -s -- --daemon --yes
        
        # Enable flakes
        mkdir -p /etc/nix
        echo 'experimental-features = nix-command flakes' >> /etc/nix/nix.conf
      fi
      
      # Add the user to nix-capable groups
      usermod -aG nix-users,nixbld lima

# VM resources
cpus: 4
memory: "8GiB"
disk: "20GiB"

# SSH port forwarding for remote development
portForwards:
  - guestSocket: "/run/podman/podman.sock"
    hostSocket: "{{.Dir}}/podman.sock"
  - guestSocket: "/run/user/{{.UID}}/podman/podman.sock"
    hostSocket: "{{.Dir}}/podman-user.sock"
  - guestPort: 8080
    hostPort: 8080
    name: app

# Environment variables
env:
  LIMA_INSTANCE: "ferronix"
  FERRONIX_ENV: "1"

# Message to show when VM is ready
message: |
  Ferronix Lima environment is ready!
  
  Usage:
    limactl shell ferronix # Get shell access
    cd ~/Code/rust_app     # Navigate to your project
    ./run-app.sh           # Run your Rust application
  
  Container commands:
    podman run -it ferronix # Run the container